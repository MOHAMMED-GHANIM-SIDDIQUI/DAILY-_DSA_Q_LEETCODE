class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<int> hash(n * n + 1, 0); 
        // Use n*n+1 to ensure proper indexing
        // Fill the hash array by counting occurrences of each number
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                hash[grid[i][j]]++;
            }
        }
        
        int twice = 0, zero = 0;
        // Find the repeated and missing numbers
        for (int i = 1; i <= n * n; i++) {
            if (hash[i] == 2) {
                twice = i;
            } else if (hash[i] == 0) {
                zero = i;
            }
        }
        
        return {twice, zero};
    }
};
